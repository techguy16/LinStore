#!/bin/bash

APP_STORE_NAME="LinStore"
APP_STORE_WIDTH=350
APP_STORE_HEIGHT=500

declare -A categories
declare -A category_apps

detect_and_write_architecture() {
    mkdir ~/.linstore
    case "$(uname -m)" in
    x86_64)
        echo "x64" >~/.linstore/architecture.txt
        ;;
    i686)
        echo "x86" >~/.linstore/architecture.txt
        ;;
    armv7l)
        echo "32" >~/.linstore/architecture.txt
        ;;
    aarch64)
        echo "64" >~/.linstore/architecture.txt
        ;;
    *)
        echo "Unknown architecture" >~/.linstore/architecture.txt
        ;;
    esac
}

read_categories() {
    while read -r category; do
        categories["$category"]=""
    done <etc/categories

    for app_dir in apps/*; do
        app_name=$(basename "$app_dir")
        category_file="apps/$app_name/category"
        while IFS= read -r app_in_category; do
            if [ -n "${categories[$app_in_category]}" ]; then
                categories["$app_in_category"]+=" $app_name"
                category_apps["$app_in_category"]+="|$app_name"
            else
                categories["$app_in_category"]="$app_name"
                category_apps["$app_in_category"]="$app_name"
            fi
        done <"$category_file"
    done
}

get_app_description() {
    app_name="$1"
    description_file="apps/$app_name/description"
    if [ -e "$description_file" ]; then
        cat "$description_file"
    else
        echo "No description available."
    fi
}

get_app_creator() {
    app_name="$1"
    creator_file="apps/$app_name/creator"
    if [ -e "$creator_file" ]; then
        cat "$creator_file"
    else
        echo "No description available."
    fi
}
get_app_website() {
    app_name="$1"
    website_file="apps/$app_name/website"
    if [ -e "$website_file" ]; then
        cat "$website_file"
    else
        echo "No description available."
    fi
}

app_details_page() {
    selected_app_name="${1//|/}"
    app_directory="apps/$selected_app_name"
    app_icon="$app_directory/icon-48.png"
    description=$(get_app_description "$selected_app_name")
    creator=$(get_app_creator "$selected_app_name")
    website=$(get_app_website "$selected_app_name")

    echo "$creator"
    echo "$description" >/tmp/description.tmp

    install_command=""
    uninstall_command=""
    architecture=$(cat ~/.linstore/architecture.txt)
    install_script="install-$architecture"
    installed_file="~/.linstore/installed.txt"

    if [ -e "$app_directory/$install_script" ]; then
        chmod +x "$app_directory/$install_script"
        chmod +x "$app_directory/uninstall"
        if grep -q "$selected_app_name" "$installed_file"; then
            # App is installed, show uninstall button
            uninstall_command="bash -c 'cd \"$app_directory\" && ./uninstall && sed -i \"/$selected_app_name/d\" \"$installed_file\"' && echo '$selected_app_name is uninstalled'"
        else
            # App is not installed, show install button
            install_command="bash -c 'cd \"$app_directory\" && ./$install_script && echo \"$selected_app_name\" >> \"$installed_file\"' && echo '$selected_app_name is installed'"
        fi
    else
        echo "Installation script not found for this architecture."
    fi

    yad --title="App Details" --width="400" --height="500" --form \
        --text "<big><b>${selected_app_name}</b></big>\n<b>${creator}</b>\n<b><a href='${website}'>${website}</a></b>\n" \
        --field="<b>Description</b>:TXT" --no-edit --image="$app_icon" \
        --button="Install:$install_command" --button="Uninstall:$uninstall_command" --close-on-extra </tmp/description.tmp

    rm /tmp/description.tmp
}



show_categories() {
    list_items=()
    for category in "${!categories[@]}"; do
        category_icon="images/$category.png"
        list_items+=("$category_icon")
        list_items+=("$category")
    done

    selected_category_raw=$(yad --text "Welcome to LinStore\nThe app store that's simple to use." --width="$APP_STORE_WIDTH" --height="$APP_STORE_HEIGHT" --columns="2" \
        "${list_items[@]}" \
        --list --image="images/logo-64.png" --title "$APP_STORE_NAME" --column "Icon:IMG" --column "Category" --button "Show Apps:3" --button "Settings:4")

    selected_category="${selected_category_raw//|/}"
    echo "$selected_category"
}

show_apps_in_category() {
    while true; do
        apps_in_category="${category_apps["$1"]}"
        echo "$apps_in_category"
        formatted_apps=()

        IFS='|' read -r -a app_list <<<"$apps_in_category"
        for app in "${app_list[@]}"; do
            app_icon="apps/$app/icon-24.png"
            formatted_apps+=("$app_icon")
            # formatted_apps+=("")
            formatted_apps+=("$app")
        done

        selected_app_name=$(yad --text "<big><b>$1 Apps</b></big>" --width="$APP_STORE_WIDTH" --height="$APP_STORE_HEIGHT" --columns="2" \
            --list --image="images/logo-64.png" --title "$APP_STORE_NAME" --column "Icon:IMG" --column "Apps" --button="Back:4" --separator="\n" "${formatted_apps[@]}" --item-height="50" --padding="5")

        button_clicked=$?
        selected_app=$(echo -n "$selected_app_name" | tr '\n' ' ' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')

        if [ $button_clicked -eq 4 ]; then
            show_app_store
            break
        fi

        if [ -n "$selected_app" ]; then
            app_details_page "$selected_app"
        else
            show_app_store
            break
        fi
    done
}

show_app_store() {
    read_categories

    # Sort categories alphabetically and format with newlines
    sorted_categories=$(printf '%s\n' "${!categories[@]}" | sort)

    list_items=()
    while IFS= read -r category; do
        category_icon="images/$category.png"
        list_items+=("$category_icon")

        list_items+=("$category")
    done <<<"$sorted_categories"

    selected_category_raw=$(yad --text "Welcome to $APP_STORE_NAME" --width="$APP_STORE_WIDTH" --height="$APP_STORE_HEIGHT" --columns="2" \
        "${list_items[@]}" \
        --list --image="images/logo-64.png" --title "$APP_STORE_NAME" --column "Icon:IMG" --column "Category" --button "Settings":"bash -c ./settings" --html --item-height=70)

    selected_category="${selected_category_raw//|/}"

    if [ -n "$selected_category" ]; then
        show_apps_in_category "$selected_category"
    fi
}

detect_and_write_architecture
show_app_store
