#!/bin/bash

APP_STORE_NAME="LinStore"
APP_STORE_WIDTH=350
APP_STORE_HEIGHT=600
if [ ! -f "gui" ] || [ ! -f "createapp" ] || [ ! -f "settings" ]; then
    cd .
else
    cd ~/.linstore
fi

declare -A categories
declare -A category_apps

detect_and_write_architecture() {
    mkdir -p ~/.linstore
    case "$(uname -m)" in
    x86_64)
        echo "x64" >~/.linstore/architecture.txt
        ;;
    i686)
        echo "x86" >~/.linstore/architecture.txt
        ;;
    armv7l)
        echo "32" >~/.linstore/architecture.txt
        ;;
    aarch64)
        echo "64" >~/.linstore/architecture.txt
        ;;
    *)
        echo "Unknown architecture" >~/.linstore/architecture.txt
        ;;
    esac
}

read_categories() {
    while read -r category; do
        categories["$category"]=""
    done <etc/categories

    for app_dir in apps/*; do
        app_name=$(basename "$app_dir")
        category_file="apps/$app_name/category"
        install_script="$app_dir/install"

        # Check if the install script or architecture-specific install scripts exist for this app
        if [ -e "$install_script" ]; then
            while IFS= read -r app_in_category; do
                if [ -n "${categories[$app_in_category]}" ]; then
                    categories["$app_in_category"]+=" $app_name"
                    category_apps["$app_in_category"]+="|$app_name"
                else
                    categories["$app_in_category"]="$app_name"
                    category_apps["$app_in_category"]="$app_name"
                fi
            done <"$category_file"
        else
            architecture=$(cat ~/.linstore/architecture.txt)
            install_script_arch="install-$architecture"

            if [ -e "$app_dir/$install_script_arch" ]; then
                while IFS= read -r app_in_category; do
                    if [ -n "${categories[$app_in_category]}" ]; then
                        categories["$app_in_category"]+=" $app_name"
                        category_apps["$app_in_category"]+="|$app_name"
                    else
                        categories["$app_in_category"]="$app_name"
                        category_apps["$app_in_category"]="$app_name"
                    fi
                done <"$category_file"
            fi
        fi
    done
}

get_app_description() {
    app_name="$1"
    description_file="apps/$app_name/description"
    if [ -e "$description_file" ]; then
        cat "$description_file"
    else
        echo "No description available."
    fi
}

get_app_creator() {
    app_name="$1"
    creator_file="apps/$app_name/creator"
    if [ -e "$creator_file" ]; then
        cat "$creator_file"
    else
        echo "No description available."
    fi
}

get_app_website() {
    app_name="$1"
    website_file="apps/$app_name/website"
    if [ -e "$website_file" ]; then
        cat "$website_file"
    else
        echo "No description available."
    fi
}
theme_get() {
    website_file="etc/theme"
    if [ -e "$website_file" ]; then
        cat "$website_file"
    else
        echo ""
    fi
}
theme=$(theme_get)

app_details_page() {
    selected_app_name="${1//|/}"
    app_directory="apps/$selected_app_name"
    app_icon="$app_directory/icon-48.png"
    description=$(get_app_description "$selected_app_name")
    creator=$(get_app_creator "$selected_app_name")
    website=$(get_app_website "$selected_app_name")

    echo "$creator"
    echo "$description" >/tmp/description.tmp
    installed_file="~/.linstore/installed"

    # password=$(GTK_THEME="${theme}" yad --title="Enter Password" --width="300" --height="100" --entry --hide-text --text="Enter your password")

    if [ -e "$app_directory/install" ]; then
        # 'install' script exists - Install for all architectures
        chmod +x "$app_directory/install"
        install_command="echo \"$password\" | sudo -S cd \"$app_directory\" && ./install && echo \"$selected_app_name\" >> \"$installed_file\" && echo '$selected_app_name is installed'"
    else
        architecture=$(cat ~/.linstore/architecture.txt)
        install_script="install-$architecture"

        if [ -e "$app_directory/$install_script" ]; then
            # Architecture-specific installation script exists - Install for the detected architecture
            chmod +x "$app_directory/$install_script"
            install_command="echo \"$password\" | sudo -S cd \"$app_directory\" && ./$install_script && echo \"$selected_app_name\" >> \"$installed_file\" && echo '$selected_app_name is installed'"
        else
            echo "Installation script not found for this architecture."
        fi
    fi

    GTK_THEME="${theme}" yad --title="App Details" --width="450" --height="$APP_STORE_HEIGHT" --form \
        --text "<big><b>${selected_app_name}</b></big>\n<b>${creator}</b>\n<b><a href='${website}'>${website}</a></b>\n" \
        --field="<b>Description</b>:TXT" --no-edit --image="$app_icon" --image-on-top \
        --button="Install:$install_command" --button="Uninstall (unfunctional)" --close-on-extra </tmp/description.tmp

    rm /tmp/description.tmp
}

show_categories() {
    list_items=()
    for category in "${!categories[@]}"; do
        category_icon="images/$category.png"
        list_items+=("$category_icon")
        list_items+=("$category")
    done

    selected_category_raw=$(GTK_THEME="${theme}" yad --text "Welcome to LinStore\nThe app store that's simple to use." --width="$APP_STORE_WIDTH" --height="$APP_STORE_HEIGHT" --columns="2" \
        "${list_items[@]}" \
        --list --image="images/logo-64.png" --image-on-top --title "$APP_STORE_NAME" --column "Icon:IMG" --column "Category" --button "Show Apps:3" --button "Settings:4" --item-padding="10")

    selected_category="${selected_category_raw//|/}"
    echo "$selected_category"
}

show_apps_in_category() {
    while true; do
        if [ "$1" == "All Apps" ]; then
            # Show all apps in the "All Apps" category
            all_apps_list=()
            for app_dir in apps/*; do
                app_name=$(basename "$app_dir")
                app_icon="apps/$app_name/icon-24.png"
                all_apps_list+=("$app_icon")
                all_apps_list+=("$app_name")
            done

            selected_app_name=$(GTK_THEME="${theme}" yad --text "<big><b>$1</b></big>" --width="$APP_STORE_WIDTH" --height="$APP_STORE_HEIGHT" --columns="2" \
                --list --image="images/logo/logo-64.png" --image-on-top --title "$APP_STORE_NAME" --column "Icon:IMG" --column "Apps" --button="Back:4" --separator="\n" "${all_apps_list[@]}" --no-headers)
        else
            apps_in_category="${category_apps["$1"]}"
            echo "$apps_in_category"
            formatted_apps=()

            IFS='|' read -r -a app_list <<<"$apps_in_category"
            for app in "${app_list[@]}"; do
                app_icon="apps/$app/icon-24.png"
                formatted_apps+=("$app_icon")
                formatted_apps+=("$app")
            done

            selected_app_name=$(GTK_THEME="${theme}" yad --text "<big><b>Apps in $1 Category</b></big>" --width="$APP_STORE_WIDTH" --height="$APP_STORE_HEIGHT" --columns="2" \
                --list --image="images/logo/logo-64.png" --image-on-top --title "$APP_STORE_NAME" --column "Icon:IMG" --column "Apps" --button="Back:4" --separator="\n" "${formatted_apps[@]}" --no-headers)
        fi

        button_clicked=$?
        selected_app=$(echo -n "$selected_app_name" | tr '\n' ' ' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')

        if [ $button_clicked -eq 4 ]; then
            show_app_store
            break
        fi

        if [ -n "$selected_app" ]; then
            app_details_page "$selected_app"
        else
            show_app_store
            break
        fi
    done
}

show_app_store() {
    read_categories

    # Sort categories alphabetically and format with newlines
    sorted_categories=$(printf '%s\n' "${!categories[@]}" | sort)

    list_items=()
    list_items=("images/categories/All Apps.png" "All Apps")
    while IFS= read -r category; do
        category_icon="images/categories/$category.png" # Path to category icons
        list_items+=("$category_icon")
        list_items+=("$category")
    done <<<"$sorted_categories"

    # Fetching a random line from the announcements file
    random_announcement=$(shuf -n 1 etc/announcements)

    # Search function
    search_apps() {
        query=$(yad --title="Search Apps" --text="Enter app name:" --entry)
        if [ -n "$query" ]; then
            app_list=$(find apps/ -iname "*$query*" -type d -exec basename {} \;)
            apps_found=()
            for app in $app_list; do
                app_icon="apps/$app/icon-24.png"
                app_category_file="apps/$app/category"
                app_category=$(head -n 1 "$app_category_file")
                apps_found+=("$app_icon" "$app")
            done
            selected_category2=$(yad --title="Search Results" --width=400 --height=300 --list --column="Icon:IMG" --column="App Name" "${apps_found[@]}")
            if [ -n "$selected_category2" ]; then
                app_details_page "$selected_category2"
            fi
        fi
    }

    selected_category_raw=$(GTK_THEME="${theme}" yad --text "$random_announcement" --width="$APP_STORE_WIDTH" --height="$APP_STORE_HEIGHT" --columns="3" \
        "${list_items[@]}" \
        --list --image="images/logo/logo-64.png" --image-on-top --title "$APP_STORE_NAME" --column "Icon:IMG" --column "Category" --button "Settings":"bash -c './settings'" --button="Search":44 --no-headers --item-height="$welcome_height")
    exval=$?
    echo "$exval"
    selected_category="${selected_category_raw//|/}"

    if [ "$exval" == "44" ]; then
        search_apps
    elif [ -n "$selected_category" ]; then
        show_apps_in_category "$selected_category"
    fi
}

detect_and_write_architecture
show_app_store
